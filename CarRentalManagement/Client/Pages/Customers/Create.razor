@page "/customers/create"
@inject HttpClient _client
@inject NavigationManager _navManager
@attribute [Authorize]
<h3 class="card-title">Create New Customer</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>Tax Identification Number:</label>
		<div>
			 <InputText @bind-Value="@customer.TaxId" class="form-control" />
			 <ValidationMessage For="@(() => customer.TaxId)" />
		</div>
	</div>
	<div class="form-group">
		<label>Email Adress:</label>
		<div>
			 <InputText @bind-Value="@customer.EmailAdress" class="form-control" />
			 <ValidationMessage For="@(() => customer.EmailAdress)" />
		</div>
	</div>
	<div class="form-group">
		<label>Contact Number:</label>
		<div>
			 <InputText @bind-Value="@customer.ContactNumber" class="form-control" />
			 <ValidationMessage For="@(() => customer.ContactNumber)" />
		</div>
	</div>
	<div class="form-group">
		<label>Adress:</label>
		<div>
			 <InputTextArea @bind-Value="@customer.Adress" class="form-control" />
			 <ValidationMessage For="@(() => customer.Adress)" />
		</div>
	</div>

<button type="submit" class="btn btn-success btn-block">Create Customer</button>
</EditForm>

@code {
	Customer customer = new Customer();

	private async Task CreateCustomer()
	{
		await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
		_navManager.NavigateTo("/customers");
	}
}
